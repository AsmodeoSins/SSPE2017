<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Views="clr-namespace:GESAL.Views"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:Converters="clr-namespace:MVVMShared.Converters;assembly=MVVMShared"
             xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:Behaviours="clr-namespace:GESAL.Clases.Behaviours"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             x:Class="GESAL.Views.EntradasAlmacenesView"
             Dialog:DialogParticipation.Register="{Binding}"
             x:Name="EntradaAlmacenControl">
    <UserControl.Resources>
        <Style x:Key="CheckBoxEquisRoja" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="6,0,0,0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Custom:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}"/>
            <Setter Property="Custom:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="LeftCol" Width="18"/>
                                <ColumnDefinition x:Name="RightCol" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_CHECKBOX">
                                <Rectangle Fill="{DynamicResource TransparentWhiteBrush}" Margin="-6,0"/>
                                <Border x:Name="normal" BorderBrush="{DynamicResource CheckBoxBrush}" BorderThickness="1" Background="{DynamicResource WhiteBrush}" Height="18" Width="18"/>
                                <Path x:Name="checkBox" Stroke="Red" UseLayoutRounding="False" StrokeThickness="3" Opacity="0">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathGeometry.Figures>
                                                <PathFigure StartPoint="0,0">
                                                    <LineSegment Point="17,17"></LineSegment>
                                                </PathFigure>
                                                <PathFigure StartPoint="17,0">
                                                    <LineSegment Point="0,17"></LineSegment>
                                                </PathFigure>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                                <Rectangle x:Name="IndeterminateCheck" Fill="#FF212121" Margin="2" Opacity="0"/>
                                <Border x:Name="disabled" BorderThickness="1" Background="{DynamicResource SemiTransparentWhiteBrush}" Height="18" Opacity="0" Width="18"/>
                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="normal" Value="{Binding (Custom:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="normal" Value="{DynamicResource HighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="normal" Value="{Binding (Custom:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                <Setter Property="LayoutTransform" TargetName="checkBox">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="-1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Custom:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                                <Setter Property="Padding" Value="0,0,6,0"/>
                                <Setter Property="Width" TargetName="LeftCol" Value="*"/>
                                <Setter Property="Width" TargetName="RightCol" Value="18"/>
                                <Setter Property="Grid.Column" TargetName="PART_CHECKBOX" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPresenter" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Converters:MultiValueConverter x:Key="MultiParamConverter"></Converters:MultiValueConverter>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CmdLoad}" CommandParameter="{Binding ElementName=EntradaAlmacenControl}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <StackPanel>
        <Label Style="{StaticResource estiloTituloControl}" Content="Entradas a Almacenes por Orden de Compra"/>
        <StackPanel Orientation="Horizontal">
            <TextBlock Margin="5"><Run Text="Fecha:"/></TextBlock>
            <TextBlock Margin="5" Text="{Binding FechaActual, Converter={Converters:FechaATextoMarkUp}, ConverterCulture={x:Static globalization:CultureInfo.CurrentCulture}}"/>
        </StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width=".5*"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width=".5*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Margin="5" HorizontalAlignment="Left"><Run Text="Municipio:"/></TextBlock>
            <ComboBox Grid.Column="1" Margin="5" ItemsSource="{Binding Municipios}" SelectedItem="{Binding SelectedMunicipio}" DisplayMemberPath="MUNICIPIO1" IsEnabled="{Binding HabilitarMunicipio}"/>
            <TextBlock Margin="5" HorizontalAlignment="Left" Grid.Column="2"><Run Text="Centro:"/></TextBlock>
            <ComboBox Grid.Column="3" Margin="5" ItemsSource="{Binding Centros}" SelectedItem="{Binding SelectedCentro}" DisplayMemberPath="DESCR" IsEnabled="{Binding HabilitarCentro}"/>
            <TextBlock Grid.Row="2" Margin="5"><Run Text="Tipo de Almacén"/></TextBlock>
            <ComboBox Grid.Column="1" Grid.Row="2" Margin="5" ItemsSource="{Binding Almacen_Tipos_Cat}" SelectedItem="{Binding SelectedAlmacen_Tipo_Cat, ValidatesOnDataErrors=True}" DisplayMemberPath="DESCR" IsEnabled="{Binding HabilitarAlmacen_Tipo_Cat}"/>
            <TextBlock Margin="5" HorizontalAlignment="Left" Grid.Row="2" Grid.Column="2"><Run Text="Almacén:"/></TextBlock>
            <ComboBox Grid.Column="4" Grid.Row="2" Margin="5" ItemsSource="{Binding AlmacenesPrincipales}" SelectedItem="{Binding SelectedAlmacenPrincipal, ValidatesOnDataErrors=True}" DisplayMemberPath="DESCRIPCION" IsEnabled="{Binding HabilitarAlmacenPrincipal}"/>
        </Grid>
        <TabControl SelectedIndex="{Binding SelectedTabindexOrdenes, NotifyOnSourceUpdated=true}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SourceUpdated">
                    <i:InvokeCommandAction Command="{Binding CmdTabIndexOrdenesChanged}" CommandParameter="">
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <TabItem Header="Ordenes Calendarizadas" Style="{StaticResource HeaderTabStyle}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5">Orden de Compra:</TextBlock>
                        <TextBox Width="200" Margin="5" Controls:TextBoxHelper.Watermark="Orden de Compra" Text="{Binding BusquedaParametro, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" CharacterCasing="Upper" MaxLength="7">
                            <i:Interaction.Behaviors>
                                <Behaviours:TextBoxInputRegExBehaviour RegularExpression="^\d+$" MaxLength="9" EmptyValue="" />
                            </i:Interaction.Behaviors>
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" CommandParameter="{Binding BusquedaParametro}" Command="{Binding CmdBuscarOC}"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Content="Buscar"  Style="{DynamicResource AccentedSquareButtonStyle}" Background="{StaticResource AccentColorBrush}" Width="100" Margin="5" Command="{Binding CmdBuscarOC }" CommandParameter="{Binding BusquedaParametro}" />
                    </StackPanel>
                    <DataGrid Margin="5 10 0 0" MaxHeight="200" ItemsSource="{Binding Ordenes_Calendarizadas}" SelectedItem="{Binding SelectedOrden_Calendarizada}" AutoGenerateColumns="False"  Style="{StaticResource MetroDataGrid}"
			ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserResizeColumns="False" x:Name="dgEntregas" SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Folio OC" Binding="{Binding NUM_ORDEN}" MinWidth="200" IsReadOnly="True" />
                            <DataGridTextColumn Header="PROVEEDOR" MinWidth="400" Binding="{Binding PROVEEDOR.NOMBRE}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </StackPanel>
            </TabItem>
            <TabItem Header="Entrada Manual" Style="{StaticResource HeaderTabStyle}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Margin="5">Orden de Compra:</TextBlock>
                        <TextBox Width="200" Margin="5" Controls:TextBoxHelper.Watermark="Orden de Compra" Text="{Binding BusquedaParametroManual, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" CharacterCasing="Upper" MaxLength="7">
                            <i:Interaction.Behaviors>
                                <Behaviours:TextBoxInputRegExBehaviour RegularExpression="^\d+$" MaxLength="9" EmptyValue="" />
                            </i:Interaction.Behaviors>
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter" CommandParameter="{Binding BusquedaParametroManual}" Command="{Binding CmdBuscarOC}"></KeyBinding>
                            </TextBox.InputBindings>
                        </TextBox>
                        <Button Content="Buscar" Style="{DynamicResource AccentedSquareButtonStyle}" Background="{StaticResource AccentColorBrush}" Width="100" Margin="5" Command="{Binding CmdBuscarOC }" CommandParameter="{Binding BusquedaParametroManual}" />
                    </StackPanel>
                    <DataGrid Margin="5 10 0 0" MaxHeight="200" ItemsSource="{Binding Ordenes_ManualCopy}" SelectedItem="{Binding SelectedOrden_Calendarizada}" AutoGenerateColumns="False"  Style="{StaticResource MetroDataGrid}"
			ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserResizeColumns="False" x:Name="dgEntregasManual" SelectionMode="Single">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Folio OC" Binding="{Binding NUM_ORDEN}" MinWidth="200" IsReadOnly="True" />
                            <DataGridTextColumn Header="PROVEEDOR" MinWidth="400" Binding="{Binding PROVEEDOR.NOMBRE}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </StackPanel>
            </TabItem>
        </TabControl>
        <GroupBox Header="{Binding HeaderProductoGrupo}" Visibility="{Binding IsRecepcionProductosVisible, Converter={StaticResource booleanToVisibilityConverter}}">
            <StackPanel>
                <Views:menuComandoBasicos2View HorizontalAlignment="Right"></Views:menuComandoBasicos2View>
                <TabControl SelectedIndex="{Binding SelectedTabIndex, NotifyOnSourceUpdated=True}">
                    <TabItem Header="Recepción" Style="{StaticResource HeaderTabStyle}">
                        <Border BorderBrush="Red" ToolTipService.IsEnabled="{Binding IsGridValido, Converter={Converters:BoolToOppositeBoolConverter}}" Margin="0 10 0 0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ToolTipService.Placement" Value="Top"></Setter>
                                    <Setter Property="ToolTipService.HorizontalOffset" Value="5"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsGridValido}" Value="False">
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ToolTipService.ToolTip>
                                <ToolTip Template="{StaticResource ToolTipTemplate}">
                                    <ToolTip.Content>
                                        <TextBlock Text="CAPTURAR TODOS LOS CAMPOS REQUERIDOS DE LA RECEPCION DE PRODUCTOS!" Style="{StaticResource errorLabel}"/>
                                    </ToolTip.Content>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <DataGrid Margin="5 10 0 0" MaxHeight="200" ItemsSource="{Binding Productos,NotifyOnSourceUpdated=true}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedProducto}" Style="{StaticResource MetroDataGrid}"
			ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserResizeColumns="False" SelectionMode="Single"
                 CanUserReorderColumns="False" x:Name="dgProductos" FontSize="11.5">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="PRODUCTO" Binding="{Binding NOMBRE}" MinWidth="200" IsReadOnly="True" />
                                    <DataGridTemplateColumn Header="DESCRIPCIÓN" MinWidth="250" MaxWidth="400" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding DESCRIPCION}" TextWrapping="Wrap"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="UNIDAD" MinWidth="70" Binding="{Binding UNIDAD_MEDIDA}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="ORDENADO" MinWidth="80" Binding="{Binding ORDENADO}" IsReadOnly="True"/>
                                    <DataGridTemplateColumn Header="RECIBIDO" MinWidth="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                    <TextBox x:Name="dgItemRecibido" Text="{Binding RECIBIDO, UpdateSourceTrigger=LostFocus, ValidatesOnDataErrors=True, NotifyOnSourceUpdated=True,Mode=TwoWay}"  IsEnabled="{Binding ISENABLED_RECIBIDO}">
                                                        <i:Interaction.Behaviors>
                                                            <Behaviours:TextBoxInputRegExBehaviour RegularExpression="^\d+$" MaxLength="9" EmptyValue="" />
                                                        </i:Interaction.Behaviors>
                                                    </TextBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="RECHAZAR" MinWidth="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <CheckBox VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource CheckBoxEquisRoja}" IsChecked="{Binding IS_CHECKED, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" CommandParameter="chk_rechazar_orden_producto" Command="{Binding Path=DataContext.CmdOnChecked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"></CheckBox>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                                <DataGrid.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="Black" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>
                                <DataGrid.InputBindings>
                                    <MouseBinding Gesture="LeftDoubleClick" CommandParameter="dgProductos" Command="{Binding CmdDblClick}"  >
                                    </MouseBinding>
                                </DataGrid.InputBindings>
                            </DataGrid>
                        </Border>
                    </TabItem>
                    <TabItem Header="Rechazar Entrada" Style="{StaticResource HeaderTabStyle}">
                        <Border BorderBrush="Red" ToolTipService.IsEnabled="{Binding IsRechazo_Entrada_Valido, Converter={Converters:BoolToOppositeBoolConverter}}" Margin="0 10 0 0">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="ToolTipService.Placement" Value="Top"></Setter>
                                    <Setter Property="ToolTipService.HorizontalOffset" Value="5"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRechazo_Entrada_Valido}" Value="False">
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ToolTipService.ToolTip>
                                <ToolTip Template="{StaticResource ToolTipTemplate}">
                                    <ToolTip.Content>
                                        <TextBlock Text="ES REQUISITO MINIMO RECHAZAR UNA ENTRADA DE PRODUCTO!" Style="{StaticResource errorLabel}"/>
                                    </ToolTip.Content>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <DataGrid Margin="5 10 0 0" MaxHeight="200" ItemsSource="{Binding Productos}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedProducto}" Style="{StaticResource MetroDataGrid}"
			                ScrollViewer.VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserResizeColumns="False" SelectionMode="Single"
                            CanUserReorderColumns="False" x:Name="dgProductosRechazarEntrada" FontSize="11.5">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="PRODUCTO" Binding="{Binding NOMBRE}" MinWidth="200" IsReadOnly="True" />
                                    <DataGridTemplateColumn Header="DESCRIPCIÓN" MinWidth="250" MaxWidth="400" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBlock Text="{Binding DESCRIPCION}" TextWrapping="Wrap"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="UNIDAD" MinWidth="70" Binding="{Binding UNIDAD_MEDIDA}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="ORDENADO" MinWidth="80" Binding="{Binding ORDENADO}" IsReadOnly="True"/>
                                    <DataGridTemplateColumn Header="RECHAZAR" MinWidth="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <CheckBox VerticalAlignment="Center" HorizontalAlignment="Right" Style="{DynamicResource CheckBoxEquisRoja}" IsChecked="{Binding IS_CHECKED, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" CommandParameter="chk_rechazar_orden_producto" Command="{Binding Path=DataContext.CmdOnChecked, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"></CheckBox>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                                <DataGrid.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="Black" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.CellStyle>
                            </DataGrid>
                        </Border>
                    </TabItem>
                </TabControl>
            </StackPanel>
        </GroupBox>
    </StackPanel>
</UserControl>