<UserControl x:Class="ControlPenales.CertificadoMedicoIngresoView" 
             Name="CertificadoIngresoWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro" xmlns:Views="clr-namespace:ControlPenales"
             mc:Ignorable="d" Width="auto" Height="auto" d:DesignWidth="880">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding CertificadoLoading}" CommandParameter="{Binding ElementName=CertificadoIngresoWindow}"  />
        </i:EventTrigger>
        <i:EventTrigger EventName="UnLoaded">
            <i:InvokeCommandAction Command="{Binding CertificadoUnLoading}" CommandParameter="{Binding ElementName=CertificadoIngresoWindow}"  />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <StackPanel>
        <!--
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
            </Grid>
        </Expander>-->
        <Expander Header="Topografia de lesiones">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="600"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Controls:MetroAnimatedSingleRowTabControl Grid.Column="0" TabStripPlacement="Top">
                        <TabItem Header="FRENTE" Style="{StaticResource HeaderTabStyle}" Controls:ControlsHelper.HeaderFontSize="20" IsSelected="{Binding TabFrente}" >
                            <Views:SeniasFrenteView HorizontalAlignment="Left" x:Name="SeniasFrenteWindow" />
                        </TabItem>
                        <TabItem Header="DORSO" Style="{StaticResource HeaderTabStyle}" Controls:ControlsHelper.HeaderFontSize="20" IsSelected="{Binding TabDorso}" >
                            <Views:SeniasDorsoView HorizontalAlignment="Left" x:Name="SeniasDorsoWindow" />
                        </TabItem>
                    </Controls:MetroAnimatedSingleRowTabControl>
                    <StackPanel Grid.Column="1">
                        <Label Content="Descripción" x:Name="lbLesiones"/>
                        <TextBox Text="{Binding TextDescripcionLesion, UpdateSourceTrigger=PropertyChanged}" Height="250" Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbLesiones}"
        					CharacterCasing="Upper" TextWrapping="Wrap"/>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" Width="130" Style="{DynamicResource AccentedSquareButtonStyle}" CommandParameter="limpiar_lesion"
        						Command="{Binding OnClick}" Margin="5" Content="limpiar"/>
                            <Button Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Width="130" Style="{DynamicResource AccentedSquareButtonStyle}" CommandParameter="agregar_lesion"
        						Command="{Binding OnClick}" Margin="5" IsEnabled="{Binding BotonLesionEnabled}" Content="agregar"/>
                        </Grid>
                        <Button x:Name="BT_LesionSelected" Command="{Binding LesionClick}" CommandParameter="{Binding ElementName=dgLesiones}" Visibility="Hidden"/>
                        <DataGrid Height="350" Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbLesiones}" AutoGenerateColumns="False" CanUserAddRows="False" SelectionMode="Single"
        					ItemsSource="{Binding ListLesiones}" IsReadOnly="True" Style="{StaticResource MetroDataGrid}" x:Name="dgLesiones" Visibility="Visible" SelectedItem="{Binding SelectLesionEliminar}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Región" Binding="{Binding REGION.DESCR}" />
                                <DataGridTextColumn Header="Descripción" Binding="{Binding DESCR}" />
                            </DataGrid.Columns>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Eliminar" Command="{Binding OnClick}" CommandParameter="eliminar_lesion" />
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction  Command="{Binding Command, ElementName=BT_LesionSelected}" CommandParameter="{Binding CommandParameter, ElementName=BT_LesionSelected}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DataGrid>
                    </StackPanel>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <!--<RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>-->
                    </Grid.RowDefinitions>
                    <!--<Label Grid.Row="0" Grid.Column="0" Content="Diagnostico" Grid.ColumnSpan="3" Name="lbDiagnostico"></Label>
                    <TextBox Grid.Row="1" Grid.ColumnSpan="3" Height="75" AcceptsReturn="True" Text="{Binding TextDiagnosticoCertificado,UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper" TextWrapping="Wrap"
                          Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbDiagnostico}"></TextBox>
                    <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Margin="0 5 0 5">
                        <Label Content="Requiere de un seguimiento medico?"></Label>
                        <CheckBox Margin="10 0 0 3" IsChecked="{Binding CheckedSeguimiento}" VerticalAlignment="Bottom" Content="Si / No"></CheckBox>
                    </StackPanel>
                    <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="150" Style="{DynamicResource AccentedSquareButtonStyle}" CommandParameter="agendar_cita" 
                        Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Command="{Binding OnClick}" Margin="2 3 0 0" IsEnabled="{Binding SeguimientoEnabled}">Agendar Cita</Button>
                    <Label Grid.Row="0" Grid.Column="0" Content="Plan Terapéutico" Grid.ColumnSpan="3"></Label>
                    <TextBox Grid.Row="1" Grid.ColumnSpan="3" Height="75" AcceptsReturn="True" Text="{Binding TextPlanTerapeuticoCertificado,UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper" TextWrapping="Wrap"
                         Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbDiagnostico}"></TextBox>-->

                    <!--<Label Grid.Row="0" Grid.Column="0" Content="Antecedentes Patologicos" Grid.ColumnSpan="3" Name="lbPatologicos"></Label>
                    <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Content="Al realizar el interrogatorio y exploracion fisica se detecto lo siguiente:"></Label>-->

                    <!--<TextBox Grid.Row="1" Grid.ColumnSpan="3" Grid.Column="0" Height="75" AcceptsReturn="True" CharacterCasing="Upper" TextWrapping="Wrap" Text="{Binding TextAntecedentesPatologicos,UpdateSourceTrigger=PropertyChanged}"
                         Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbPatologicos}"></TextBox>
                    <TextBox Grid.Row="3" Grid.ColumnSpan="3" Height="75" AcceptsReturn="True" Width="{Binding ActualWidth, ConverterParameter=x-1, Converter={Views:MathConverter}, ElementName=lbAnchoDiagnostico1}"
                         Text="{Binding TextSeDetecto,UpdateSourceTrigger=PropertyChanged}" CharacterCasing="Upper" TextWrapping="Wrap"></TextBox>-->
                </Grid>
            </StackPanel>
        </Expander>
        <!--<Expander Header="Datos Medicos">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    -->
        <!--<RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>-->
        <!--
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
            </Grid>
        </Expander>-->
    </StackPanel>
</UserControl>
